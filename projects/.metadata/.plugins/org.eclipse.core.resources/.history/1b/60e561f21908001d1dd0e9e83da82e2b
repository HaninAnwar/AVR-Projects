/***********************************************************************/
/***********************************************************************/
/************************ AUTHER : Hanin Anwar  ************************/
/************************ LAYER  : HAL          ************************/
/************************ SWC    : DIO          ************************/
/************************ VERSIO : 1.00         ************************/
/***********************************************************************/
/***********************************************************************/

#include "STD_TYPES.h"
#include "BIT_MATH.h"
#include <util/delay.h>


#include "DIO_interface.h"
#include "SW_interface.h"
#include "SW_config.h"
#include "SW_private.h"

u8 SW_u8GetState(SW_T *SW,u8 *Copy_pu8State)
{
	u8 Local_ErrorState = 0;

	if(SW->SelfLockType == SW_SelfLock)
	{
		if(SW->PullType == SW_PullUp)
		{
			if(SW->Pin == 0)

				*Copy_pu8State = SW_Pressed;

			else if(SW->Pin == 1)

				*Copy_pu8State = SW_NotPressed;

		}

		else if(SW->PullType == SW_PullDn)
		{
			if(SW->Pin == 0)

				*Copy_pu8State = SW_NotPressed;

			else if(SW->Pin == 1)

				*Copy_pu8State = SW_Pressed;
		}

		else
		{
			Local_ErrorState = 1;
		}
	}

	else if(SW->SelfLockType == SW_NotSelfLock)
	{
		if(SW->PullType == SW_PullUp)
		{
			if(SW->Pin == 0)
			{
				_delay_ms(50);
				*Copy_pu8State = SW_Pressed;
			}
			else if(SW->Pin == 1)
			{
				_delay_ms(50);
				*Copy_pu8State = SW_NotPressed;
			}
		}

		else if(SW->PullType == SW_PullDn)
		{
			if(SW->Pin == 0)
			{
				_delay_ms(50);
				*Copy_pu8State = SW_NotPressed;
			}
			else if(SW->Pin == 1)
			{
				_delay_ms(50);
				*Copy_pu8State = SW_Pressed;
			}
		}

		else
		{
			Local_ErrorState = 1;
		}
	}

	else
	{
		Local_ErrorState = 1;
	}



	return Local_ErrorState;
}
