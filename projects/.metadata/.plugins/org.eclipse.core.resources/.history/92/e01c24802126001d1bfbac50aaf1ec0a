/***********************************************************************/
/***********************************************************************/
/************************ AUTHER : Hanin Anwar  ************************/
/************************ LAYER  : MCAL         ************************/
/************************ SWC    : ADC          ************************/
/************************ VERSION : 1.00         ************************/
/***********************************************************************/
/***********************************************************************/

#include "STD_TYPES.h"
#include "BIT_MATH.h"

#include "ADC_register.h"
#include "ADC_config.h"
#include "ADC_private.h"
#include "ADC_interface.h"


void ADC_voidInit(void)
{
//	CLR_BIT(ADMUX,ADCMUX_REFS0);
//	CLR_BIT(ADMUX,ADCMUX_REFS1);
//	SET_BIT(ADMUX,ADCMUX_REFS0);
//	SET_BIT(ADMUX,ADCMUX_REFS1);

	/*1. check reference voltage*/
#if ADC_REF_VOLT == AREF
	CLR_BIT(ADMUX,ADCMUX_REFS0);
	CLR_BIT(ADMUX,ADCMUX_REFS1);

#elif ADC_REF_VOLT == AVCC
	SET_BIT(ADMUX,ADCMUX_REFS0);
	CLR_BIT(ADMUX,ADCMUX_REFS1);

#elif ADC_REF_VOLT == INTERNAL_VOLT
	SET_BIT(ADMUX,ADCMUX_REFS0);
	SET_BIT(ADMUX,ADCMUX_REFS1);

#else
#error "Wrong ADC_REF_VOLT configuration option"

#endif

#if ADC_ENABLE == ENABLED
#elif ADC_ENABLE == DISABLED
#else
#error "Wrong ADC_ENABLE configuration option"
#endif
}

u8 ADC_u8GetChannelReading(u8 Copy_u8Channel)
{
	u8 Local_u8ErrorState = OK;


	return Local_u8ErrorState;
}
