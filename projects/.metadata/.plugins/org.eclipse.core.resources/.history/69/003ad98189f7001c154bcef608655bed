/***********************************************************************/
/***********************************************************************/
/************************ AUTHER : Hanin Anwar  ************************/
/************************ LAYER  : HAL          ************************/
/************************ SWC    : DIO          ************************/
/************************ VERSIO : 1.00         ************************/
/***********************************************************************/
/***********************************************************************/

#include "STD_TYPES.h"
#include "BIT_MATH.h"
#include <util/delay.h>


#include "DIO_interface.h"
#include "SW_interface.h"
#include "SW_config.h"
#include "SW_private.h"

u8 SW_GetStae(SW_T *SW , u8* Copy_u8State)
{
    u8 Local_Errorstate = 0;
    u8 Local_GetValue = 0;
	DIO_u8SetPinDirection(SW->Port ,SW->Pin , DIO_u8PIN_INPUT);

	DIO_u8GetPinValue(SW->Port , SW->Pin ,&Local_GetValue);

	if(SW->SelfLockType == SW_SELF_LOCK)
	{
		if(SW->PullType == SW_PULL_UP)
		{

			if(Local_GetValue == DIO_u8PIN_HIGH)
			{
				*Copy_u8State = SW_u8PRESSED;
			}
			else if (Local_GetValue == DIO_u8PIN_LOW)
			{
				*Copy_u8State = SW_u8NOT_PRESSED;
			}

		}

		else if (SW->PullType == SW_PULL_DN)
		{
			if(Local_GetValue == DIO_u8PIN_HIGH)
			{
				*Copy_u8State = SW_u8NOT_PRESSED;
			}
			else if (Local_GetValue == DIO_u8PIN_LOW)
			{
				*Copy_u8State =  SW_u8PRESSED;
			}

		}

		else
		{
			Local_Errorstate = 1;
		}
	}
	else if (SW->SelfLockType == SW_NOT_SELF_LOCK)
	{
		if(SW->PullType == SW_PULL_UP)
		{
			_delay_ms(50);
			if(Local_GetValue == DIO_u8PIN_HIGH)
			{
				*Copy_u8State = SW_u8PRESSED;
			}
			else if (Local_GetValue == DIO_u8PIN_LOW)
			{
				*Copy_u8State = SW_u8NOT_PRESSED;
			}

		}

		else if (SW->PullType == SW_PULL_DN)
		{
			_delay_ms(50);
			if(Local_GetValue == DIO_u8PIN_HIGH)
			{
				*Copy_u8State = SW_u8NOT_PRESSED;
			}
			else if (Local_GetValue == DIO_u8PIN_LOW)
			{
				*Copy_u8State =  SW_u8PRESSED;
			}

		}

		else
		{
			Local_Errorstate = 1;
		}
	}

	else
	{
		Local_Errorstate = 1;
	}

	return Local_Errorstate;

}
