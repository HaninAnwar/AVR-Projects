/***********************************************************************/
/***********************************************************************/
/************************ AUTHER : Hanin Anwar  ************************/
/************************ LAYER  : MCAL         ************************/
/************************ SWC    : ADC          ************************/
/************************ VERSION : 1.00         ************************/
/***********************************************************************/
/***********************************************************************/

#ifndef ADC_INTERFACE_H_
#define ADC_INTERFACE_H_

/*Voltage Reference Selections :
 * 							1.AREF
 * 							2.AVCC
 * 							3.INTERNAL_VOLT
*/

/* Enabling ADC Peripheral :
 * 							1.ENABLED
 * 							2.DISABLED
 * 				            */

/* ADC Resolution :
 * 				1.EIGHT_BITS
 *				2.TEN_BITS
*/

/* Clock scaler selection :
 * 							1.DIV_BY_2
 * 							2.DIV_BY_4
 * 							3.DIV_BY_8
 * 							4.DIV_BY_16
 * 							5.DIV_BY_32
 * 							6.DIV_BY_64
 * 							7.DIV_BY_128
 * 							*/


/*ADC trigger source :
*						1.FREE_RUN
*						2.ANALOG_COMP
*						3.EXTI
*						4.TIMER0_COMP
*						5.TIMER0_OVERFLOW
*						6.TIMER1_COMP
*						7.TIMER1_OVERFLOW
*						8.TIMER1_EVENT_CAPT
*						*/

/*ADC channels Selection :
 *							1.CHANNEL_ADC0
 *							2.CHANNEL_ADC1
 *							3.CHANNEL_ADC2
 *							4.CHANNEL_ADC3
 *							5.CHANNEL_ADC4
 *							6.CHANNEL_ADC5
 *							7.CHANNEL_ADC6
 *							8.CHANNEL_ADC7
 *							9.CHANNEL_ADC0_ADC0_X10
 *							10.CHANNEL_ADC1_ADC0_X10
 *							11.CHANNEL_ADC0_ADC0_X200
 *							12.CHANNEL_ADC1_ADC0_X200
 *							13.CHANNEL_ADC2_ADC2_X10
 *							14.CHANNEL_ADC3_ADC2_X10
 *							15.CHANNEL_ADC2_ADC2_X200
 *							16.CHANNEL_ADC3_ADC2_X200
 *							17.CHANNEL_ADC0_ADC1_X1
 *							18.CHANNEL_ADC1_ADC1_X1
 *							19.CHANNEL_ADC2_ADC1_X1
 *							20.CHANNEL_ADC3_ADC1_X1
 *							21.CHANNEL_ADC4_ADC1_X1
 *							22.CHANNEL_ADC5_ADC1_X1
 *							23.CHANNEL_ADC6_ADC1_X1
 *							24.CHANNEL_ADC7_ADC1_X1
 *							25.CHANNEL_ADC0_ADC2_X1
 *							26.CHANNEL_ADC1_ADC2_X1
 *							27.CHANNEL_ADC2_ADC2_X1
 *							28.CHANNEL_ADC3_ADC2_X1
 *							29.CHANNEL_ADC4_ADC2_X1
 *							*/


typedef struct
{
	u8   *Channel;
	u16  *Result;
	u8   Size;
	void (*NotificationFunc)(void);
}Chain_t;

void ADC_voidInit(void);

u8 ADC_u8StartConversionSynch(u8 Copy_u8Channel , u16 *Copy_p16Reading);

u8 ADC_u8StartConversionAsynch(u8 Copy_u8Channel , u16 *Copy_p16Reading , void (*Copy_pvNotificationFunc(void)));

u8 ADC_u8StartChainAsynch(Chain_t *Copy_chain);

#endif
