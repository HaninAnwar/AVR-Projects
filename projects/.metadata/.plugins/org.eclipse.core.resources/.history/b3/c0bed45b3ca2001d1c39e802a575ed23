#include "BIT_MATH.h"
#include "STD_TYPES.h"

#include "USART_register.h"
#include "USART_config.h"
#include "USART_private.h"
#include "USART_interface.h"

void USRAT_voidInit(void)
{
	u8 Local_u8UCSRC = 0;

	/*Character size selection : 8 bits
	 *Clock polarity : no clk
	 *Stop bit : 1 bit : 0
	 *Parity Selection : no parity : 00
	 *Mode selection : Asynch : 0 */

	/*Access USCRC*/
	SET_BIT(Local_u8UCSRC,UCSRC_UBRRH_URSEL);

	/*Mode selection : Asynch*/
	CLR_BIT(Local_u8UCSRC,UCSRC_UMSEL);

	/*Parity mode : no parity*/
	CLR_BIT(Local_u8UCSRC,UCSRC_UPM0);
	CLR_BIT(Local_u8UCSRC,UCSRC_UPM1);

	/*Stop bit : 1 bit*/
	CLR_BIT(Local_u8UCSRC,UCSRC_USBS);

	/*Character size selection : 8 bits*/
	SET_BIT(Local_u8UCSRC,UCSRC_UCSZ0);
	SET_BIT(Local_u8UCSRC,UCSRC_UCSZ1);
	CLR_BIT(UCSRB,UCSRB_UCSZ2);


	/*Clock Polarity : no clk*/
	CLR_BIT(Local_u8UCSRC,UCSRC_UCPOL);

	UCSRC_UBRRH = Local_u8UCSRC;

	/*Baud rate selection : 9600*/
	UBRRL = 51;


	/*Enable Tx*/
	SET_BIT(UCSRB,UCSRB_TXEN);

	/*Enable Rx */
	SET_BIT(UCSRB,UCSRB_RXEN);

}

void USART_voidSend(u8 Copy_u8Data)
{
	u8 Local_u8Ready;

	do
	{
		/*Check Tx buffer is ready to transmit*/
		Local_u8Ready = GET_BIT(UCSRA,UCSRA_UDRE);
	}
	while (Local_u8Ready == 0);

	UDR = Copy_u8Data;
}

u8 USART_u8Receive(void)
{
	u8 Local_u8Recieved;

	do
	{
		Local_u8Recieved = GET_BIT(UCSRA,UCSRA_RXC);
	}
	while(Local_u8Recieved == 0);

	return UDR;
}
