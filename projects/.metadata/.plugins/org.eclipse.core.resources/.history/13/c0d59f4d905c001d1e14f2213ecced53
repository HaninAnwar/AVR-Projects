#include "STD_TYPES.h"
#include "BIT_MATH.h"

#include "TWI_register.h"
#include "TWI_config.h"
#include "TWI_private.h"
#include "TWI_interface.h"

void TWI_voidMasterInit(Copy_u8MasterAdd)
{
	/*Set Clock to : 400 Kbps*/

	/*Set TWPS1 TWPS0 :0*/
	CLR_BIT(TWSR,TWSR_TWPS0);
	CLR_BIT(TWSR,TWSR_TWPS1);

	/*Set TWBR to : 2 */
	TWBR = 2;

	/*Enable TWI*/
	SET_BIT(TWCR,TWCR_TWEN);

	/*Assign master address*/
	if(Copy_u8MasterAdd != 0)
	{
		TWAR = Copy_u8MasterAdd << 1;
	}


}

void TWI_voidSlaveInit(u8 Copy_u8SalveAdd)
{

}

TWI_ErrStatus TWI_SendStartCondition(void)
{

}
TWI_ErrStatus TWI_SendReaptedStart(void)
{

}

TWI_ErrStatus TWI_SendSlaveAddWithWrite(u8 Copy_u8SlaveAdd)
{

}
TWI_ErrStatus TWI_SendSlaveAddWithRead(u8 Copy_u8SlaveAdd)
{

}

TWI_ErrStatus TWI_MasterWriteDataByte(u8 Copy_u8DataByte)
{

}

TWI_ErrStatus TWI_MasterReadDataByte(u8 *Copy_pu8DataByte)
{

}
void TWI_SendStopCondition(void)
{

}
