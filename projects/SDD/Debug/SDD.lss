
SDD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000950  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000950  000009c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000b1c  00000000  00000000  000009d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000530  00000000  00000000  000014ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e5       	ldi	r30, 0x50	; 80
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 7d 04 	call	0x8fa	; 0x8fa <main>
  7a:	0c 94 a6 04 	jmp	0x94c	; 0x94c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_u8SetPinDirection>:
#include "DIO_interface.h"
#include "DIO_config.h"
#include "DIO_private.h"

u8 DIO_u8SetPinDirection(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_Direction)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	28 97       	sbiw	r28, 0x08	; 8
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
  96:	8a 83       	std	Y+2, r24	; 0x02
  98:	6b 83       	std	Y+3, r22	; 0x03
  9a:	4c 83       	std	Y+4, r20	; 0x04
    u8 Local_Errorstate = 0;
  9c:	19 82       	std	Y+1, r1	; 0x01
    
    if (Copy_u8Pin <= DIO_u8PIN7)
  9e:	8b 81       	ldd	r24, Y+3	; 0x03
  a0:	88 30       	cpi	r24, 0x08	; 8
  a2:	08 f0       	brcs	.+2      	; 0xa6 <DIO_u8SetPinDirection+0x24>
  a4:	f4 c0       	rjmp	.+488    	; 0x28e <DIO_u8SetPinDirection+0x20c>
        {
            if (Copy_Direction == DIO_u8PIN_INPUT)
  a6:	8c 81       	ldd	r24, Y+4	; 0x04
  a8:	88 23       	and	r24, r24
  aa:	09 f0       	breq	.+2      	; 0xae <DIO_u8SetPinDirection+0x2c>
  ac:	77 c0       	rjmp	.+238    	; 0x19c <DIO_u8SetPinDirection+0x11a>
            {
              switch(Copy_u8Port)
  ae:	8a 81       	ldd	r24, Y+2	; 0x02
  b0:	28 2f       	mov	r18, r24
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	38 87       	std	Y+8, r19	; 0x08
  b6:	2f 83       	std	Y+7, r18	; 0x07
  b8:	8f 81       	ldd	r24, Y+7	; 0x07
  ba:	98 85       	ldd	r25, Y+8	; 0x08
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	91 05       	cpc	r25, r1
  c0:	59 f1       	breq	.+86     	; 0x118 <DIO_u8SetPinDirection+0x96>
  c2:	2f 81       	ldd	r18, Y+7	; 0x07
  c4:	38 85       	ldd	r19, Y+8	; 0x08
  c6:	22 30       	cpi	r18, 0x02	; 2
  c8:	31 05       	cpc	r19, r1
  ca:	2c f4       	brge	.+10     	; 0xd6 <DIO_u8SetPinDirection+0x54>
  cc:	8f 81       	ldd	r24, Y+7	; 0x07
  ce:	98 85       	ldd	r25, Y+8	; 0x08
  d0:	00 97       	sbiw	r24, 0x00	; 0
  d2:	69 f0       	breq	.+26     	; 0xee <DIO_u8SetPinDirection+0x6c>
  d4:	60 c0       	rjmp	.+192    	; 0x196 <DIO_u8SetPinDirection+0x114>
  d6:	2f 81       	ldd	r18, Y+7	; 0x07
  d8:	38 85       	ldd	r19, Y+8	; 0x08
  da:	22 30       	cpi	r18, 0x02	; 2
  dc:	31 05       	cpc	r19, r1
  de:	89 f1       	breq	.+98     	; 0x142 <DIO_u8SetPinDirection+0xc0>
  e0:	8f 81       	ldd	r24, Y+7	; 0x07
  e2:	98 85       	ldd	r25, Y+8	; 0x08
  e4:	83 30       	cpi	r24, 0x03	; 3
  e6:	91 05       	cpc	r25, r1
  e8:	09 f4       	brne	.+2      	; 0xec <DIO_u8SetPinDirection+0x6a>
  ea:	40 c0       	rjmp	.+128    	; 0x16c <DIO_u8SetPinDirection+0xea>
  ec:	54 c0       	rjmp	.+168    	; 0x196 <DIO_u8SetPinDirection+0x114>
                {
                    case DIO_u8PORTA: CLR_BIT(DDRA,Copy_u8Pin); break; 
  ee:	aa e3       	ldi	r26, 0x3A	; 58
  f0:	b0 e0       	ldi	r27, 0x00	; 0
  f2:	ea e3       	ldi	r30, 0x3A	; 58
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	48 2f       	mov	r20, r24
  fa:	8b 81       	ldd	r24, Y+3	; 0x03
  fc:	28 2f       	mov	r18, r24
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 2e       	mov	r0, r18
 106:	02 c0       	rjmp	.+4      	; 0x10c <DIO_u8SetPinDirection+0x8a>
 108:	88 0f       	add	r24, r24
 10a:	99 1f       	adc	r25, r25
 10c:	0a 94       	dec	r0
 10e:	e2 f7       	brpl	.-8      	; 0x108 <DIO_u8SetPinDirection+0x86>
 110:	80 95       	com	r24
 112:	84 23       	and	r24, r20
 114:	8c 93       	st	X, r24
 116:	bd c0       	rjmp	.+378    	; 0x292 <DIO_u8SetPinDirection+0x210>
                    case DIO_u8PORTB: CLR_BIT(DDRB,Copy_u8Pin); break; 
 118:	a7 e3       	ldi	r26, 0x37	; 55
 11a:	b0 e0       	ldi	r27, 0x00	; 0
 11c:	e7 e3       	ldi	r30, 0x37	; 55
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	48 2f       	mov	r20, r24
 124:	8b 81       	ldd	r24, Y+3	; 0x03
 126:	28 2f       	mov	r18, r24
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	02 2e       	mov	r0, r18
 130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_u8SetPinDirection+0xb4>
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	0a 94       	dec	r0
 138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_u8SetPinDirection+0xb0>
 13a:	80 95       	com	r24
 13c:	84 23       	and	r24, r20
 13e:	8c 93       	st	X, r24
 140:	a8 c0       	rjmp	.+336    	; 0x292 <DIO_u8SetPinDirection+0x210>
                    case DIO_u8PORTC: CLR_BIT(DDRC,Copy_u8Pin); break; 
 142:	a4 e3       	ldi	r26, 0x34	; 52
 144:	b0 e0       	ldi	r27, 0x00	; 0
 146:	e4 e3       	ldi	r30, 0x34	; 52
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	80 81       	ld	r24, Z
 14c:	48 2f       	mov	r20, r24
 14e:	8b 81       	ldd	r24, Y+3	; 0x03
 150:	28 2f       	mov	r18, r24
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	02 2e       	mov	r0, r18
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_u8SetPinDirection+0xde>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	0a 94       	dec	r0
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_u8SetPinDirection+0xda>
 164:	80 95       	com	r24
 166:	84 23       	and	r24, r20
 168:	8c 93       	st	X, r24
 16a:	93 c0       	rjmp	.+294    	; 0x292 <DIO_u8SetPinDirection+0x210>
                    case DIO_u8PORTD: CLR_BIT(DDRD,Copy_u8Pin); break; 
 16c:	a1 e3       	ldi	r26, 0x31	; 49
 16e:	b0 e0       	ldi	r27, 0x00	; 0
 170:	e1 e3       	ldi	r30, 0x31	; 49
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	48 2f       	mov	r20, r24
 178:	8b 81       	ldd	r24, Y+3	; 0x03
 17a:	28 2f       	mov	r18, r24
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	02 2e       	mov	r0, r18
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_u8SetPinDirection+0x108>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	0a 94       	dec	r0
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_u8SetPinDirection+0x104>
 18e:	80 95       	com	r24
 190:	84 23       	and	r24, r20
 192:	8c 93       	st	X, r24
 194:	7e c0       	rjmp	.+252    	; 0x292 <DIO_u8SetPinDirection+0x210>
                    default : Local_Errorstate = 1;
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	89 83       	std	Y+1, r24	; 0x01
 19a:	7b c0       	rjmp	.+246    	; 0x292 <DIO_u8SetPinDirection+0x210>
                }
            } 

            else if (Copy_Direction == DIO_u8PIN_OUTPUT)
 19c:	8c 81       	ldd	r24, Y+4	; 0x04
 19e:	81 30       	cpi	r24, 0x01	; 1
 1a0:	09 f0       	breq	.+2      	; 0x1a4 <DIO_u8SetPinDirection+0x122>
 1a2:	72 c0       	rjmp	.+228    	; 0x288 <DIO_u8SetPinDirection+0x206>
            {
                switch(Copy_u8Port)
 1a4:	8a 81       	ldd	r24, Y+2	; 0x02
 1a6:	28 2f       	mov	r18, r24
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	3e 83       	std	Y+6, r19	; 0x06
 1ac:	2d 83       	std	Y+5, r18	; 0x05
 1ae:	8d 81       	ldd	r24, Y+5	; 0x05
 1b0:	9e 81       	ldd	r25, Y+6	; 0x06
 1b2:	81 30       	cpi	r24, 0x01	; 1
 1b4:	91 05       	cpc	r25, r1
 1b6:	49 f1       	breq	.+82     	; 0x20a <DIO_u8SetPinDirection+0x188>
 1b8:	2d 81       	ldd	r18, Y+5	; 0x05
 1ba:	3e 81       	ldd	r19, Y+6	; 0x06
 1bc:	22 30       	cpi	r18, 0x02	; 2
 1be:	31 05       	cpc	r19, r1
 1c0:	2c f4       	brge	.+10     	; 0x1cc <DIO_u8SetPinDirection+0x14a>
 1c2:	8d 81       	ldd	r24, Y+5	; 0x05
 1c4:	9e 81       	ldd	r25, Y+6	; 0x06
 1c6:	00 97       	sbiw	r24, 0x00	; 0
 1c8:	61 f0       	breq	.+24     	; 0x1e2 <DIO_u8SetPinDirection+0x160>
 1ca:	5b c0       	rjmp	.+182    	; 0x282 <DIO_u8SetPinDirection+0x200>
 1cc:	2d 81       	ldd	r18, Y+5	; 0x05
 1ce:	3e 81       	ldd	r19, Y+6	; 0x06
 1d0:	22 30       	cpi	r18, 0x02	; 2
 1d2:	31 05       	cpc	r19, r1
 1d4:	71 f1       	breq	.+92     	; 0x232 <DIO_u8SetPinDirection+0x1b0>
 1d6:	8d 81       	ldd	r24, Y+5	; 0x05
 1d8:	9e 81       	ldd	r25, Y+6	; 0x06
 1da:	83 30       	cpi	r24, 0x03	; 3
 1dc:	91 05       	cpc	r25, r1
 1de:	e9 f1       	breq	.+122    	; 0x25a <DIO_u8SetPinDirection+0x1d8>
 1e0:	50 c0       	rjmp	.+160    	; 0x282 <DIO_u8SetPinDirection+0x200>
                {
                    case DIO_u8PORTA: SET_BIT(DDRA,Copy_u8Pin); break; 
 1e2:	aa e3       	ldi	r26, 0x3A	; 58
 1e4:	b0 e0       	ldi	r27, 0x00	; 0
 1e6:	ea e3       	ldi	r30, 0x3A	; 58
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	48 2f       	mov	r20, r24
 1ee:	8b 81       	ldd	r24, Y+3	; 0x03
 1f0:	28 2f       	mov	r18, r24
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	02 2e       	mov	r0, r18
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_u8SetPinDirection+0x17e>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	0a 94       	dec	r0
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_u8SetPinDirection+0x17a>
 204:	84 2b       	or	r24, r20
 206:	8c 93       	st	X, r24
 208:	44 c0       	rjmp	.+136    	; 0x292 <DIO_u8SetPinDirection+0x210>
                    case DIO_u8PORTB: SET_BIT(DDRB,Copy_u8Pin); break; 
 20a:	a7 e3       	ldi	r26, 0x37	; 55
 20c:	b0 e0       	ldi	r27, 0x00	; 0
 20e:	e7 e3       	ldi	r30, 0x37	; 55
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	48 2f       	mov	r20, r24
 216:	8b 81       	ldd	r24, Y+3	; 0x03
 218:	28 2f       	mov	r18, r24
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 2e       	mov	r0, r18
 222:	02 c0       	rjmp	.+4      	; 0x228 <DIO_u8SetPinDirection+0x1a6>
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	0a 94       	dec	r0
 22a:	e2 f7       	brpl	.-8      	; 0x224 <DIO_u8SetPinDirection+0x1a2>
 22c:	84 2b       	or	r24, r20
 22e:	8c 93       	st	X, r24
 230:	30 c0       	rjmp	.+96     	; 0x292 <DIO_u8SetPinDirection+0x210>
                    case DIO_u8PORTC: SET_BIT(DDRC,Copy_u8Pin); break; 
 232:	a4 e3       	ldi	r26, 0x34	; 52
 234:	b0 e0       	ldi	r27, 0x00	; 0
 236:	e4 e3       	ldi	r30, 0x34	; 52
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	48 2f       	mov	r20, r24
 23e:	8b 81       	ldd	r24, Y+3	; 0x03
 240:	28 2f       	mov	r18, r24
 242:	30 e0       	ldi	r19, 0x00	; 0
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 2e       	mov	r0, r18
 24a:	02 c0       	rjmp	.+4      	; 0x250 <DIO_u8SetPinDirection+0x1ce>
 24c:	88 0f       	add	r24, r24
 24e:	99 1f       	adc	r25, r25
 250:	0a 94       	dec	r0
 252:	e2 f7       	brpl	.-8      	; 0x24c <DIO_u8SetPinDirection+0x1ca>
 254:	84 2b       	or	r24, r20
 256:	8c 93       	st	X, r24
 258:	1c c0       	rjmp	.+56     	; 0x292 <DIO_u8SetPinDirection+0x210>
                    case DIO_u8PORTD: SET_BIT(DDRD,Copy_u8Pin); break; 
 25a:	a1 e3       	ldi	r26, 0x31	; 49
 25c:	b0 e0       	ldi	r27, 0x00	; 0
 25e:	e1 e3       	ldi	r30, 0x31	; 49
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	80 81       	ld	r24, Z
 264:	48 2f       	mov	r20, r24
 266:	8b 81       	ldd	r24, Y+3	; 0x03
 268:	28 2f       	mov	r18, r24
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	02 2e       	mov	r0, r18
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_u8SetPinDirection+0x1f6>
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	0a 94       	dec	r0
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_u8SetPinDirection+0x1f2>
 27c:	84 2b       	or	r24, r20
 27e:	8c 93       	st	X, r24
 280:	08 c0       	rjmp	.+16     	; 0x292 <DIO_u8SetPinDirection+0x210>
                    default : Local_Errorstate = 1;
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	89 83       	std	Y+1, r24	; 0x01
 286:	05 c0       	rjmp	.+10     	; 0x292 <DIO_u8SetPinDirection+0x210>
                }
            }

            else 
            {
                    Local_Errorstate = 1;
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	89 83       	std	Y+1, r24	; 0x01
 28c:	02 c0       	rjmp	.+4      	; 0x292 <DIO_u8SetPinDirection+0x210>
            
        }
            
        else 
        {
            Local_Errorstate = 1;
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	89 83       	std	Y+1, r24	; 0x01
        }
    
    return Local_Errorstate;
 292:	89 81       	ldd	r24, Y+1	; 0x01
}
 294:	28 96       	adiw	r28, 0x08	; 8
 296:	0f b6       	in	r0, 0x3f	; 63
 298:	f8 94       	cli
 29a:	de bf       	out	0x3e, r29	; 62
 29c:	0f be       	out	0x3f, r0	; 63
 29e:	cd bf       	out	0x3d, r28	; 61
 2a0:	cf 91       	pop	r28
 2a2:	df 91       	pop	r29
 2a4:	08 95       	ret

000002a6 <DIO_u8SetPortDirection>:
u8 DIO_u8SetPortDirection(u8 Copy_u8Port ,u8 Copy_Direction)
{
 2a6:	df 93       	push	r29
 2a8:	cf 93       	push	r28
 2aa:	00 d0       	rcall	.+0      	; 0x2ac <DIO_u8SetPortDirection+0x6>
 2ac:	00 d0       	rcall	.+0      	; 0x2ae <DIO_u8SetPortDirection+0x8>
 2ae:	0f 92       	push	r0
 2b0:	cd b7       	in	r28, 0x3d	; 61
 2b2:	de b7       	in	r29, 0x3e	; 62
 2b4:	8a 83       	std	Y+2, r24	; 0x02
 2b6:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_Errorstate = 0;
 2b8:	19 82       	std	Y+1, r1	; 0x01
    
    
    switch(Copy_u8Port)
 2ba:	8a 81       	ldd	r24, Y+2	; 0x02
 2bc:	28 2f       	mov	r18, r24
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	3d 83       	std	Y+5, r19	; 0x05
 2c2:	2c 83       	std	Y+4, r18	; 0x04
 2c4:	8c 81       	ldd	r24, Y+4	; 0x04
 2c6:	9d 81       	ldd	r25, Y+5	; 0x05
 2c8:	81 30       	cpi	r24, 0x01	; 1
 2ca:	91 05       	cpc	r25, r1
 2cc:	d1 f0       	breq	.+52     	; 0x302 <DIO_u8SetPortDirection+0x5c>
 2ce:	2c 81       	ldd	r18, Y+4	; 0x04
 2d0:	3d 81       	ldd	r19, Y+5	; 0x05
 2d2:	22 30       	cpi	r18, 0x02	; 2
 2d4:	31 05       	cpc	r19, r1
 2d6:	2c f4       	brge	.+10     	; 0x2e2 <DIO_u8SetPortDirection+0x3c>
 2d8:	8c 81       	ldd	r24, Y+4	; 0x04
 2da:	9d 81       	ldd	r25, Y+5	; 0x05
 2dc:	00 97       	sbiw	r24, 0x00	; 0
 2de:	61 f0       	breq	.+24     	; 0x2f8 <DIO_u8SetPortDirection+0x52>
 2e0:	1f c0       	rjmp	.+62     	; 0x320 <DIO_u8SetPortDirection+0x7a>
 2e2:	2c 81       	ldd	r18, Y+4	; 0x04
 2e4:	3d 81       	ldd	r19, Y+5	; 0x05
 2e6:	22 30       	cpi	r18, 0x02	; 2
 2e8:	31 05       	cpc	r19, r1
 2ea:	81 f0       	breq	.+32     	; 0x30c <DIO_u8SetPortDirection+0x66>
 2ec:	8c 81       	ldd	r24, Y+4	; 0x04
 2ee:	9d 81       	ldd	r25, Y+5	; 0x05
 2f0:	83 30       	cpi	r24, 0x03	; 3
 2f2:	91 05       	cpc	r25, r1
 2f4:	81 f0       	breq	.+32     	; 0x316 <DIO_u8SetPortDirection+0x70>
 2f6:	14 c0       	rjmp	.+40     	; 0x320 <DIO_u8SetPortDirection+0x7a>
    {
        case DIO_u8PORTA : DDRA = Copy_Direction;  break; 
 2f8:	ea e3       	ldi	r30, 0x3A	; 58
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	8b 81       	ldd	r24, Y+3	; 0x03
 2fe:	80 83       	st	Z, r24
 300:	11 c0       	rjmp	.+34     	; 0x324 <DIO_u8SetPortDirection+0x7e>
        case DIO_u8PORTB : DDRB = Copy_Direction;  break; 
 302:	e7 e3       	ldi	r30, 0x37	; 55
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	8b 81       	ldd	r24, Y+3	; 0x03
 308:	80 83       	st	Z, r24
 30a:	0c c0       	rjmp	.+24     	; 0x324 <DIO_u8SetPortDirection+0x7e>
        case DIO_u8PORTC : DDRC = Copy_Direction;  break; 
 30c:	e4 e3       	ldi	r30, 0x34	; 52
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	8b 81       	ldd	r24, Y+3	; 0x03
 312:	80 83       	st	Z, r24
 314:	07 c0       	rjmp	.+14     	; 0x324 <DIO_u8SetPortDirection+0x7e>
        case DIO_u8PORTD : DDRD = Copy_Direction;  break; 
 316:	e1 e3       	ldi	r30, 0x31	; 49
 318:	f0 e0       	ldi	r31, 0x00	; 0
 31a:	8b 81       	ldd	r24, Y+3	; 0x03
 31c:	80 83       	st	Z, r24
 31e:	02 c0       	rjmp	.+4      	; 0x324 <DIO_u8SetPortDirection+0x7e>
        default : Local_Errorstate = 1;
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	89 83       	std	Y+1, r24	; 0x01
    }
    
    return Local_Errorstate;
 324:	89 81       	ldd	r24, Y+1	; 0x01
}
 326:	0f 90       	pop	r0
 328:	0f 90       	pop	r0
 32a:	0f 90       	pop	r0
 32c:	0f 90       	pop	r0
 32e:	0f 90       	pop	r0
 330:	cf 91       	pop	r28
 332:	df 91       	pop	r29
 334:	08 95       	ret

00000336 <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Value)
{
 336:	df 93       	push	r29
 338:	cf 93       	push	r28
 33a:	cd b7       	in	r28, 0x3d	; 61
 33c:	de b7       	in	r29, 0x3e	; 62
 33e:	28 97       	sbiw	r28, 0x08	; 8
 340:	0f b6       	in	r0, 0x3f	; 63
 342:	f8 94       	cli
 344:	de bf       	out	0x3e, r29	; 62
 346:	0f be       	out	0x3f, r0	; 63
 348:	cd bf       	out	0x3d, r28	; 61
 34a:	8a 83       	std	Y+2, r24	; 0x02
 34c:	6b 83       	std	Y+3, r22	; 0x03
 34e:	4c 83       	std	Y+4, r20	; 0x04
    u8 Local_Errorstate = 0;
 350:	19 82       	std	Y+1, r1	; 0x01
    
    if (Copy_u8Pin <= DIO_u8PIN7)
 352:	8b 81       	ldd	r24, Y+3	; 0x03
 354:	88 30       	cpi	r24, 0x08	; 8
 356:	08 f0       	brcs	.+2      	; 0x35a <DIO_u8SetPinValue+0x24>
 358:	f4 c0       	rjmp	.+488    	; 0x542 <DIO_u8SetPinValue+0x20c>
        {
            if (Copy_u8Value == DIO_u8PIN_LOW)
 35a:	8c 81       	ldd	r24, Y+4	; 0x04
 35c:	88 23       	and	r24, r24
 35e:	09 f0       	breq	.+2      	; 0x362 <DIO_u8SetPinValue+0x2c>
 360:	77 c0       	rjmp	.+238    	; 0x450 <DIO_u8SetPinValue+0x11a>
            {
              switch(Copy_u8Port)
 362:	8a 81       	ldd	r24, Y+2	; 0x02
 364:	28 2f       	mov	r18, r24
 366:	30 e0       	ldi	r19, 0x00	; 0
 368:	38 87       	std	Y+8, r19	; 0x08
 36a:	2f 83       	std	Y+7, r18	; 0x07
 36c:	8f 81       	ldd	r24, Y+7	; 0x07
 36e:	98 85       	ldd	r25, Y+8	; 0x08
 370:	81 30       	cpi	r24, 0x01	; 1
 372:	91 05       	cpc	r25, r1
 374:	59 f1       	breq	.+86     	; 0x3cc <DIO_u8SetPinValue+0x96>
 376:	2f 81       	ldd	r18, Y+7	; 0x07
 378:	38 85       	ldd	r19, Y+8	; 0x08
 37a:	22 30       	cpi	r18, 0x02	; 2
 37c:	31 05       	cpc	r19, r1
 37e:	2c f4       	brge	.+10     	; 0x38a <DIO_u8SetPinValue+0x54>
 380:	8f 81       	ldd	r24, Y+7	; 0x07
 382:	98 85       	ldd	r25, Y+8	; 0x08
 384:	00 97       	sbiw	r24, 0x00	; 0
 386:	69 f0       	breq	.+26     	; 0x3a2 <DIO_u8SetPinValue+0x6c>
 388:	60 c0       	rjmp	.+192    	; 0x44a <DIO_u8SetPinValue+0x114>
 38a:	2f 81       	ldd	r18, Y+7	; 0x07
 38c:	38 85       	ldd	r19, Y+8	; 0x08
 38e:	22 30       	cpi	r18, 0x02	; 2
 390:	31 05       	cpc	r19, r1
 392:	89 f1       	breq	.+98     	; 0x3f6 <DIO_u8SetPinValue+0xc0>
 394:	8f 81       	ldd	r24, Y+7	; 0x07
 396:	98 85       	ldd	r25, Y+8	; 0x08
 398:	83 30       	cpi	r24, 0x03	; 3
 39a:	91 05       	cpc	r25, r1
 39c:	09 f4       	brne	.+2      	; 0x3a0 <DIO_u8SetPinValue+0x6a>
 39e:	40 c0       	rjmp	.+128    	; 0x420 <DIO_u8SetPinValue+0xea>
 3a0:	54 c0       	rjmp	.+168    	; 0x44a <DIO_u8SetPinValue+0x114>
                {
                    case DIO_u8PORTA: CLR_BIT(PORTA,Copy_u8Pin); break; 
 3a2:	ab e3       	ldi	r26, 0x3B	; 59
 3a4:	b0 e0       	ldi	r27, 0x00	; 0
 3a6:	eb e3       	ldi	r30, 0x3B	; 59
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	80 81       	ld	r24, Z
 3ac:	48 2f       	mov	r20, r24
 3ae:	8b 81       	ldd	r24, Y+3	; 0x03
 3b0:	28 2f       	mov	r18, r24
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	02 2e       	mov	r0, r18
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_u8SetPinValue+0x8a>
 3bc:	88 0f       	add	r24, r24
 3be:	99 1f       	adc	r25, r25
 3c0:	0a 94       	dec	r0
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <DIO_u8SetPinValue+0x86>
 3c4:	80 95       	com	r24
 3c6:	84 23       	and	r24, r20
 3c8:	8c 93       	st	X, r24
 3ca:	bd c0       	rjmp	.+378    	; 0x546 <DIO_u8SetPinValue+0x210>
                    case DIO_u8PORTB: CLR_BIT(PORTB,Copy_u8Pin); break; 
 3cc:	a8 e3       	ldi	r26, 0x38	; 56
 3ce:	b0 e0       	ldi	r27, 0x00	; 0
 3d0:	e8 e3       	ldi	r30, 0x38	; 56
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	80 81       	ld	r24, Z
 3d6:	48 2f       	mov	r20, r24
 3d8:	8b 81       	ldd	r24, Y+3	; 0x03
 3da:	28 2f       	mov	r18, r24
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	02 2e       	mov	r0, r18
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <DIO_u8SetPinValue+0xb4>
 3e6:	88 0f       	add	r24, r24
 3e8:	99 1f       	adc	r25, r25
 3ea:	0a 94       	dec	r0
 3ec:	e2 f7       	brpl	.-8      	; 0x3e6 <DIO_u8SetPinValue+0xb0>
 3ee:	80 95       	com	r24
 3f0:	84 23       	and	r24, r20
 3f2:	8c 93       	st	X, r24
 3f4:	a8 c0       	rjmp	.+336    	; 0x546 <DIO_u8SetPinValue+0x210>
                    case DIO_u8PORTC: CLR_BIT(PORTC,Copy_u8Pin); break; 
 3f6:	a5 e3       	ldi	r26, 0x35	; 53
 3f8:	b0 e0       	ldi	r27, 0x00	; 0
 3fa:	e5 e3       	ldi	r30, 0x35	; 53
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	80 81       	ld	r24, Z
 400:	48 2f       	mov	r20, r24
 402:	8b 81       	ldd	r24, Y+3	; 0x03
 404:	28 2f       	mov	r18, r24
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	02 2e       	mov	r0, r18
 40e:	02 c0       	rjmp	.+4      	; 0x414 <DIO_u8SetPinValue+0xde>
 410:	88 0f       	add	r24, r24
 412:	99 1f       	adc	r25, r25
 414:	0a 94       	dec	r0
 416:	e2 f7       	brpl	.-8      	; 0x410 <DIO_u8SetPinValue+0xda>
 418:	80 95       	com	r24
 41a:	84 23       	and	r24, r20
 41c:	8c 93       	st	X, r24
 41e:	93 c0       	rjmp	.+294    	; 0x546 <DIO_u8SetPinValue+0x210>
                    case DIO_u8PORTD: CLR_BIT(PORTD,Copy_u8Pin); break; 
 420:	a2 e3       	ldi	r26, 0x32	; 50
 422:	b0 e0       	ldi	r27, 0x00	; 0
 424:	e2 e3       	ldi	r30, 0x32	; 50
 426:	f0 e0       	ldi	r31, 0x00	; 0
 428:	80 81       	ld	r24, Z
 42a:	48 2f       	mov	r20, r24
 42c:	8b 81       	ldd	r24, Y+3	; 0x03
 42e:	28 2f       	mov	r18, r24
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	02 2e       	mov	r0, r18
 438:	02 c0       	rjmp	.+4      	; 0x43e <DIO_u8SetPinValue+0x108>
 43a:	88 0f       	add	r24, r24
 43c:	99 1f       	adc	r25, r25
 43e:	0a 94       	dec	r0
 440:	e2 f7       	brpl	.-8      	; 0x43a <DIO_u8SetPinValue+0x104>
 442:	80 95       	com	r24
 444:	84 23       	and	r24, r20
 446:	8c 93       	st	X, r24
 448:	7e c0       	rjmp	.+252    	; 0x546 <DIO_u8SetPinValue+0x210>
                    default : Local_Errorstate = 1;
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	89 83       	std	Y+1, r24	; 0x01
 44e:	7b c0       	rjmp	.+246    	; 0x546 <DIO_u8SetPinValue+0x210>
                }
            } 

            else if (Copy_u8Value == DIO_u8PIN_HIGH)
 450:	8c 81       	ldd	r24, Y+4	; 0x04
 452:	81 30       	cpi	r24, 0x01	; 1
 454:	09 f0       	breq	.+2      	; 0x458 <DIO_u8SetPinValue+0x122>
 456:	72 c0       	rjmp	.+228    	; 0x53c <DIO_u8SetPinValue+0x206>
            {
                switch(Copy_u8Port)
 458:	8a 81       	ldd	r24, Y+2	; 0x02
 45a:	28 2f       	mov	r18, r24
 45c:	30 e0       	ldi	r19, 0x00	; 0
 45e:	3e 83       	std	Y+6, r19	; 0x06
 460:	2d 83       	std	Y+5, r18	; 0x05
 462:	8d 81       	ldd	r24, Y+5	; 0x05
 464:	9e 81       	ldd	r25, Y+6	; 0x06
 466:	81 30       	cpi	r24, 0x01	; 1
 468:	91 05       	cpc	r25, r1
 46a:	49 f1       	breq	.+82     	; 0x4be <DIO_u8SetPinValue+0x188>
 46c:	2d 81       	ldd	r18, Y+5	; 0x05
 46e:	3e 81       	ldd	r19, Y+6	; 0x06
 470:	22 30       	cpi	r18, 0x02	; 2
 472:	31 05       	cpc	r19, r1
 474:	2c f4       	brge	.+10     	; 0x480 <DIO_u8SetPinValue+0x14a>
 476:	8d 81       	ldd	r24, Y+5	; 0x05
 478:	9e 81       	ldd	r25, Y+6	; 0x06
 47a:	00 97       	sbiw	r24, 0x00	; 0
 47c:	61 f0       	breq	.+24     	; 0x496 <DIO_u8SetPinValue+0x160>
 47e:	5b c0       	rjmp	.+182    	; 0x536 <DIO_u8SetPinValue+0x200>
 480:	2d 81       	ldd	r18, Y+5	; 0x05
 482:	3e 81       	ldd	r19, Y+6	; 0x06
 484:	22 30       	cpi	r18, 0x02	; 2
 486:	31 05       	cpc	r19, r1
 488:	71 f1       	breq	.+92     	; 0x4e6 <DIO_u8SetPinValue+0x1b0>
 48a:	8d 81       	ldd	r24, Y+5	; 0x05
 48c:	9e 81       	ldd	r25, Y+6	; 0x06
 48e:	83 30       	cpi	r24, 0x03	; 3
 490:	91 05       	cpc	r25, r1
 492:	e9 f1       	breq	.+122    	; 0x50e <DIO_u8SetPinValue+0x1d8>
 494:	50 c0       	rjmp	.+160    	; 0x536 <DIO_u8SetPinValue+0x200>
                {
                    case DIO_u8PORTA: SET_BIT(PORTA,Copy_u8Pin); break; 
 496:	ab e3       	ldi	r26, 0x3B	; 59
 498:	b0 e0       	ldi	r27, 0x00	; 0
 49a:	eb e3       	ldi	r30, 0x3B	; 59
 49c:	f0 e0       	ldi	r31, 0x00	; 0
 49e:	80 81       	ld	r24, Z
 4a0:	48 2f       	mov	r20, r24
 4a2:	8b 81       	ldd	r24, Y+3	; 0x03
 4a4:	28 2f       	mov	r18, r24
 4a6:	30 e0       	ldi	r19, 0x00	; 0
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	02 2e       	mov	r0, r18
 4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <DIO_u8SetPinValue+0x17e>
 4b0:	88 0f       	add	r24, r24
 4b2:	99 1f       	adc	r25, r25
 4b4:	0a 94       	dec	r0
 4b6:	e2 f7       	brpl	.-8      	; 0x4b0 <DIO_u8SetPinValue+0x17a>
 4b8:	84 2b       	or	r24, r20
 4ba:	8c 93       	st	X, r24
 4bc:	44 c0       	rjmp	.+136    	; 0x546 <DIO_u8SetPinValue+0x210>
                    case DIO_u8PORTB: SET_BIT(PORTB,Copy_u8Pin); break; 
 4be:	a8 e3       	ldi	r26, 0x38	; 56
 4c0:	b0 e0       	ldi	r27, 0x00	; 0
 4c2:	e8 e3       	ldi	r30, 0x38	; 56
 4c4:	f0 e0       	ldi	r31, 0x00	; 0
 4c6:	80 81       	ld	r24, Z
 4c8:	48 2f       	mov	r20, r24
 4ca:	8b 81       	ldd	r24, Y+3	; 0x03
 4cc:	28 2f       	mov	r18, r24
 4ce:	30 e0       	ldi	r19, 0x00	; 0
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	02 2e       	mov	r0, r18
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <DIO_u8SetPinValue+0x1a6>
 4d8:	88 0f       	add	r24, r24
 4da:	99 1f       	adc	r25, r25
 4dc:	0a 94       	dec	r0
 4de:	e2 f7       	brpl	.-8      	; 0x4d8 <DIO_u8SetPinValue+0x1a2>
 4e0:	84 2b       	or	r24, r20
 4e2:	8c 93       	st	X, r24
 4e4:	30 c0       	rjmp	.+96     	; 0x546 <DIO_u8SetPinValue+0x210>
                    case DIO_u8PORTC: SET_BIT(PORTC,Copy_u8Pin); break; 
 4e6:	a5 e3       	ldi	r26, 0x35	; 53
 4e8:	b0 e0       	ldi	r27, 0x00	; 0
 4ea:	e5 e3       	ldi	r30, 0x35	; 53
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	80 81       	ld	r24, Z
 4f0:	48 2f       	mov	r20, r24
 4f2:	8b 81       	ldd	r24, Y+3	; 0x03
 4f4:	28 2f       	mov	r18, r24
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	02 2e       	mov	r0, r18
 4fe:	02 c0       	rjmp	.+4      	; 0x504 <DIO_u8SetPinValue+0x1ce>
 500:	88 0f       	add	r24, r24
 502:	99 1f       	adc	r25, r25
 504:	0a 94       	dec	r0
 506:	e2 f7       	brpl	.-8      	; 0x500 <DIO_u8SetPinValue+0x1ca>
 508:	84 2b       	or	r24, r20
 50a:	8c 93       	st	X, r24
 50c:	1c c0       	rjmp	.+56     	; 0x546 <DIO_u8SetPinValue+0x210>
                    case DIO_u8PORTD: SET_BIT(PORTD,Copy_u8Pin); break; 
 50e:	a2 e3       	ldi	r26, 0x32	; 50
 510:	b0 e0       	ldi	r27, 0x00	; 0
 512:	e2 e3       	ldi	r30, 0x32	; 50
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	80 81       	ld	r24, Z
 518:	48 2f       	mov	r20, r24
 51a:	8b 81       	ldd	r24, Y+3	; 0x03
 51c:	28 2f       	mov	r18, r24
 51e:	30 e0       	ldi	r19, 0x00	; 0
 520:	81 e0       	ldi	r24, 0x01	; 1
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	02 2e       	mov	r0, r18
 526:	02 c0       	rjmp	.+4      	; 0x52c <DIO_u8SetPinValue+0x1f6>
 528:	88 0f       	add	r24, r24
 52a:	99 1f       	adc	r25, r25
 52c:	0a 94       	dec	r0
 52e:	e2 f7       	brpl	.-8      	; 0x528 <DIO_u8SetPinValue+0x1f2>
 530:	84 2b       	or	r24, r20
 532:	8c 93       	st	X, r24
 534:	08 c0       	rjmp	.+16     	; 0x546 <DIO_u8SetPinValue+0x210>
                    default : Local_Errorstate = 1;
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	89 83       	std	Y+1, r24	; 0x01
 53a:	05 c0       	rjmp	.+10     	; 0x546 <DIO_u8SetPinValue+0x210>
                }
            }

            else 
            {
                Local_Errorstate = 1;
 53c:	81 e0       	ldi	r24, 0x01	; 1
 53e:	89 83       	std	Y+1, r24	; 0x01
 540:	02 c0       	rjmp	.+4      	; 0x546 <DIO_u8SetPinValue+0x210>
            
        }
            
        else 
        {
            Local_Errorstate = 1;
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	89 83       	std	Y+1, r24	; 0x01
        }
    
    return Local_Errorstate;
 546:	89 81       	ldd	r24, Y+1	; 0x01
}
 548:	28 96       	adiw	r28, 0x08	; 8
 54a:	0f b6       	in	r0, 0x3f	; 63
 54c:	f8 94       	cli
 54e:	de bf       	out	0x3e, r29	; 62
 550:	0f be       	out	0x3f, r0	; 63
 552:	cd bf       	out	0x3d, r28	; 61
 554:	cf 91       	pop	r28
 556:	df 91       	pop	r29
 558:	08 95       	ret

0000055a <DIO_u8SetPortValue>:
u8 DIO_u8SetPortValue(u8 Copy_u8Port , u8 Copy_u8Value)
{
 55a:	df 93       	push	r29
 55c:	cf 93       	push	r28
 55e:	00 d0       	rcall	.+0      	; 0x560 <DIO_u8SetPortValue+0x6>
 560:	00 d0       	rcall	.+0      	; 0x562 <DIO_u8SetPortValue+0x8>
 562:	0f 92       	push	r0
 564:	cd b7       	in	r28, 0x3d	; 61
 566:	de b7       	in	r29, 0x3e	; 62
 568:	8a 83       	std	Y+2, r24	; 0x02
 56a:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_Errorstate = 0;
 56c:	19 82       	std	Y+1, r1	; 0x01
    
    switch(Copy_u8Port)
 56e:	8a 81       	ldd	r24, Y+2	; 0x02
 570:	28 2f       	mov	r18, r24
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	3d 83       	std	Y+5, r19	; 0x05
 576:	2c 83       	std	Y+4, r18	; 0x04
 578:	8c 81       	ldd	r24, Y+4	; 0x04
 57a:	9d 81       	ldd	r25, Y+5	; 0x05
 57c:	81 30       	cpi	r24, 0x01	; 1
 57e:	91 05       	cpc	r25, r1
 580:	d1 f0       	breq	.+52     	; 0x5b6 <DIO_u8SetPortValue+0x5c>
 582:	2c 81       	ldd	r18, Y+4	; 0x04
 584:	3d 81       	ldd	r19, Y+5	; 0x05
 586:	22 30       	cpi	r18, 0x02	; 2
 588:	31 05       	cpc	r19, r1
 58a:	2c f4       	brge	.+10     	; 0x596 <DIO_u8SetPortValue+0x3c>
 58c:	8c 81       	ldd	r24, Y+4	; 0x04
 58e:	9d 81       	ldd	r25, Y+5	; 0x05
 590:	00 97       	sbiw	r24, 0x00	; 0
 592:	61 f0       	breq	.+24     	; 0x5ac <DIO_u8SetPortValue+0x52>
 594:	1f c0       	rjmp	.+62     	; 0x5d4 <DIO_u8SetPortValue+0x7a>
 596:	2c 81       	ldd	r18, Y+4	; 0x04
 598:	3d 81       	ldd	r19, Y+5	; 0x05
 59a:	22 30       	cpi	r18, 0x02	; 2
 59c:	31 05       	cpc	r19, r1
 59e:	81 f0       	breq	.+32     	; 0x5c0 <DIO_u8SetPortValue+0x66>
 5a0:	8c 81       	ldd	r24, Y+4	; 0x04
 5a2:	9d 81       	ldd	r25, Y+5	; 0x05
 5a4:	83 30       	cpi	r24, 0x03	; 3
 5a6:	91 05       	cpc	r25, r1
 5a8:	81 f0       	breq	.+32     	; 0x5ca <DIO_u8SetPortValue+0x70>
 5aa:	14 c0       	rjmp	.+40     	; 0x5d4 <DIO_u8SetPortValue+0x7a>
    {
        case DIO_u8PORTA : PORTA = Copy_u8Value;  break; 
 5ac:	eb e3       	ldi	r30, 0x3B	; 59
 5ae:	f0 e0       	ldi	r31, 0x00	; 0
 5b0:	8b 81       	ldd	r24, Y+3	; 0x03
 5b2:	80 83       	st	Z, r24
 5b4:	11 c0       	rjmp	.+34     	; 0x5d8 <DIO_u8SetPortValue+0x7e>
        case DIO_u8PORTB : PORTB = Copy_u8Value;  break; 
 5b6:	e8 e3       	ldi	r30, 0x38	; 56
 5b8:	f0 e0       	ldi	r31, 0x00	; 0
 5ba:	8b 81       	ldd	r24, Y+3	; 0x03
 5bc:	80 83       	st	Z, r24
 5be:	0c c0       	rjmp	.+24     	; 0x5d8 <DIO_u8SetPortValue+0x7e>
        case DIO_u8PORTC : PORTC = Copy_u8Value;  break; 
 5c0:	e5 e3       	ldi	r30, 0x35	; 53
 5c2:	f0 e0       	ldi	r31, 0x00	; 0
 5c4:	8b 81       	ldd	r24, Y+3	; 0x03
 5c6:	80 83       	st	Z, r24
 5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <DIO_u8SetPortValue+0x7e>
        case DIO_u8PORTD : PORTD = Copy_u8Value;  break; 
 5ca:	e2 e3       	ldi	r30, 0x32	; 50
 5cc:	f0 e0       	ldi	r31, 0x00	; 0
 5ce:	8b 81       	ldd	r24, Y+3	; 0x03
 5d0:	80 83       	st	Z, r24
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <DIO_u8SetPortValue+0x7e>
        default : Local_Errorstate = 1;
 5d4:	81 e0       	ldi	r24, 0x01	; 1
 5d6:	89 83       	std	Y+1, r24	; 0x01
    }
    
    return Local_Errorstate;
 5d8:	89 81       	ldd	r24, Y+1	; 0x01
}
 5da:	0f 90       	pop	r0
 5dc:	0f 90       	pop	r0
 5de:	0f 90       	pop	r0
 5e0:	0f 90       	pop	r0
 5e2:	0f 90       	pop	r0
 5e4:	cf 91       	pop	r28
 5e6:	df 91       	pop	r29
 5e8:	08 95       	ret

000005ea <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin , u8* Copy_pu8Value)
{
 5ea:	df 93       	push	r29
 5ec:	cf 93       	push	r28
 5ee:	cd b7       	in	r28, 0x3d	; 61
 5f0:	de b7       	in	r29, 0x3e	; 62
 5f2:	27 97       	sbiw	r28, 0x07	; 7
 5f4:	0f b6       	in	r0, 0x3f	; 63
 5f6:	f8 94       	cli
 5f8:	de bf       	out	0x3e, r29	; 62
 5fa:	0f be       	out	0x3f, r0	; 63
 5fc:	cd bf       	out	0x3d, r28	; 61
 5fe:	8a 83       	std	Y+2, r24	; 0x02
 600:	6b 83       	std	Y+3, r22	; 0x03
 602:	5d 83       	std	Y+5, r21	; 0x05
 604:	4c 83       	std	Y+4, r20	; 0x04
    u8 Local_Errorstate = 0;
 606:	19 82       	std	Y+1, r1	; 0x01
    
    if ((Copy_pu8Value != NULL) && (Copy_u8Pin <= DIO_u8PIN7))
 608:	8c 81       	ldd	r24, Y+4	; 0x04
 60a:	9d 81       	ldd	r25, Y+5	; 0x05
 60c:	00 97       	sbiw	r24, 0x00	; 0
 60e:	09 f4       	brne	.+2      	; 0x612 <DIO_u8GetPinValue+0x28>
 610:	88 c0       	rjmp	.+272    	; 0x722 <DIO_u8GetPinValue+0x138>
 612:	8b 81       	ldd	r24, Y+3	; 0x03
 614:	88 30       	cpi	r24, 0x08	; 8
 616:	08 f0       	brcs	.+2      	; 0x61a <DIO_u8GetPinValue+0x30>
 618:	84 c0       	rjmp	.+264    	; 0x722 <DIO_u8GetPinValue+0x138>
        {
            
            switch(Copy_u8Port)
 61a:	8a 81       	ldd	r24, Y+2	; 0x02
 61c:	28 2f       	mov	r18, r24
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	3f 83       	std	Y+7, r19	; 0x07
 622:	2e 83       	std	Y+6, r18	; 0x06
 624:	4e 81       	ldd	r20, Y+6	; 0x06
 626:	5f 81       	ldd	r21, Y+7	; 0x07
 628:	41 30       	cpi	r20, 0x01	; 1
 62a:	51 05       	cpc	r21, r1
 62c:	79 f1       	breq	.+94     	; 0x68c <DIO_u8GetPinValue+0xa2>
 62e:	8e 81       	ldd	r24, Y+6	; 0x06
 630:	9f 81       	ldd	r25, Y+7	; 0x07
 632:	82 30       	cpi	r24, 0x02	; 2
 634:	91 05       	cpc	r25, r1
 636:	34 f4       	brge	.+12     	; 0x644 <DIO_u8GetPinValue+0x5a>
 638:	2e 81       	ldd	r18, Y+6	; 0x06
 63a:	3f 81       	ldd	r19, Y+7	; 0x07
 63c:	21 15       	cp	r18, r1
 63e:	31 05       	cpc	r19, r1
 640:	69 f0       	breq	.+26     	; 0x65c <DIO_u8GetPinValue+0x72>
 642:	6c c0       	rjmp	.+216    	; 0x71c <DIO_u8GetPinValue+0x132>
 644:	4e 81       	ldd	r20, Y+6	; 0x06
 646:	5f 81       	ldd	r21, Y+7	; 0x07
 648:	42 30       	cpi	r20, 0x02	; 2
 64a:	51 05       	cpc	r21, r1
 64c:	b9 f1       	breq	.+110    	; 0x6bc <DIO_u8GetPinValue+0xd2>
 64e:	8e 81       	ldd	r24, Y+6	; 0x06
 650:	9f 81       	ldd	r25, Y+7	; 0x07
 652:	83 30       	cpi	r24, 0x03	; 3
 654:	91 05       	cpc	r25, r1
 656:	09 f4       	brne	.+2      	; 0x65a <DIO_u8GetPinValue+0x70>
 658:	49 c0       	rjmp	.+146    	; 0x6ec <DIO_u8GetPinValue+0x102>
 65a:	60 c0       	rjmp	.+192    	; 0x71c <DIO_u8GetPinValue+0x132>
            {
                case DIO_u8PORTA : *Copy_pu8Value = GET_BIT(PINA,Copy_u8Pin); break; 
 65c:	a9 e3       	ldi	r26, 0x39	; 57
 65e:	b0 e0       	ldi	r27, 0x00	; 0
 660:	e9 e3       	ldi	r30, 0x39	; 57
 662:	f0 e0       	ldi	r31, 0x00	; 0
 664:	80 81       	ld	r24, Z
 666:	28 2f       	mov	r18, r24
 668:	30 e0       	ldi	r19, 0x00	; 0
 66a:	8b 81       	ldd	r24, Y+3	; 0x03
 66c:	88 2f       	mov	r24, r24
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	a9 01       	movw	r20, r18
 672:	02 c0       	rjmp	.+4      	; 0x678 <DIO_u8GetPinValue+0x8e>
 674:	44 0f       	add	r20, r20
 676:	55 1f       	adc	r21, r21
 678:	8a 95       	dec	r24
 67a:	e2 f7       	brpl	.-8      	; 0x674 <DIO_u8GetPinValue+0x8a>
 67c:	ca 01       	movw	r24, r20
 67e:	81 70       	andi	r24, 0x01	; 1
 680:	8c 93       	st	X, r24
 682:	8c 91       	ld	r24, X
 684:	ec 81       	ldd	r30, Y+4	; 0x04
 686:	fd 81       	ldd	r31, Y+5	; 0x05
 688:	80 83       	st	Z, r24
 68a:	4d c0       	rjmp	.+154    	; 0x726 <DIO_u8GetPinValue+0x13c>
                case DIO_u8PORTB : *Copy_pu8Value = GET_BIT(PINB,Copy_u8Pin); break; 
 68c:	a6 e3       	ldi	r26, 0x36	; 54
 68e:	b0 e0       	ldi	r27, 0x00	; 0
 690:	e6 e3       	ldi	r30, 0x36	; 54
 692:	f0 e0       	ldi	r31, 0x00	; 0
 694:	80 81       	ld	r24, Z
 696:	28 2f       	mov	r18, r24
 698:	30 e0       	ldi	r19, 0x00	; 0
 69a:	8b 81       	ldd	r24, Y+3	; 0x03
 69c:	88 2f       	mov	r24, r24
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	a9 01       	movw	r20, r18
 6a2:	02 c0       	rjmp	.+4      	; 0x6a8 <DIO_u8GetPinValue+0xbe>
 6a4:	44 0f       	add	r20, r20
 6a6:	55 1f       	adc	r21, r21
 6a8:	8a 95       	dec	r24
 6aa:	e2 f7       	brpl	.-8      	; 0x6a4 <DIO_u8GetPinValue+0xba>
 6ac:	ca 01       	movw	r24, r20
 6ae:	81 70       	andi	r24, 0x01	; 1
 6b0:	8c 93       	st	X, r24
 6b2:	8c 91       	ld	r24, X
 6b4:	ec 81       	ldd	r30, Y+4	; 0x04
 6b6:	fd 81       	ldd	r31, Y+5	; 0x05
 6b8:	80 83       	st	Z, r24
 6ba:	35 c0       	rjmp	.+106    	; 0x726 <DIO_u8GetPinValue+0x13c>
                case DIO_u8PORTC : *Copy_pu8Value = GET_BIT(PINC,Copy_u8Pin); break; 
 6bc:	a3 e3       	ldi	r26, 0x33	; 51
 6be:	b0 e0       	ldi	r27, 0x00	; 0
 6c0:	e3 e3       	ldi	r30, 0x33	; 51
 6c2:	f0 e0       	ldi	r31, 0x00	; 0
 6c4:	80 81       	ld	r24, Z
 6c6:	28 2f       	mov	r18, r24
 6c8:	30 e0       	ldi	r19, 0x00	; 0
 6ca:	8b 81       	ldd	r24, Y+3	; 0x03
 6cc:	88 2f       	mov	r24, r24
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	a9 01       	movw	r20, r18
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <DIO_u8GetPinValue+0xee>
 6d4:	44 0f       	add	r20, r20
 6d6:	55 1f       	adc	r21, r21
 6d8:	8a 95       	dec	r24
 6da:	e2 f7       	brpl	.-8      	; 0x6d4 <DIO_u8GetPinValue+0xea>
 6dc:	ca 01       	movw	r24, r20
 6de:	81 70       	andi	r24, 0x01	; 1
 6e0:	8c 93       	st	X, r24
 6e2:	8c 91       	ld	r24, X
 6e4:	ec 81       	ldd	r30, Y+4	; 0x04
 6e6:	fd 81       	ldd	r31, Y+5	; 0x05
 6e8:	80 83       	st	Z, r24
 6ea:	1d c0       	rjmp	.+58     	; 0x726 <DIO_u8GetPinValue+0x13c>
                case DIO_u8PORTD : *Copy_pu8Value = GET_BIT(PIND,Copy_u8Pin); break; 
 6ec:	a0 e3       	ldi	r26, 0x30	; 48
 6ee:	b0 e0       	ldi	r27, 0x00	; 0
 6f0:	e0 e3       	ldi	r30, 0x30	; 48
 6f2:	f0 e0       	ldi	r31, 0x00	; 0
 6f4:	80 81       	ld	r24, Z
 6f6:	28 2f       	mov	r18, r24
 6f8:	30 e0       	ldi	r19, 0x00	; 0
 6fa:	8b 81       	ldd	r24, Y+3	; 0x03
 6fc:	88 2f       	mov	r24, r24
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	a9 01       	movw	r20, r18
 702:	02 c0       	rjmp	.+4      	; 0x708 <DIO_u8GetPinValue+0x11e>
 704:	44 0f       	add	r20, r20
 706:	55 1f       	adc	r21, r21
 708:	8a 95       	dec	r24
 70a:	e2 f7       	brpl	.-8      	; 0x704 <DIO_u8GetPinValue+0x11a>
 70c:	ca 01       	movw	r24, r20
 70e:	81 70       	andi	r24, 0x01	; 1
 710:	8c 93       	st	X, r24
 712:	8c 91       	ld	r24, X
 714:	ec 81       	ldd	r30, Y+4	; 0x04
 716:	fd 81       	ldd	r31, Y+5	; 0x05
 718:	80 83       	st	Z, r24
 71a:	05 c0       	rjmp	.+10     	; 0x726 <DIO_u8GetPinValue+0x13c>
                default : Local_Errorstate = 1;
 71c:	81 e0       	ldi	r24, 0x01	; 1
 71e:	89 83       	std	Y+1, r24	; 0x01
 720:	02 c0       	rjmp	.+4      	; 0x726 <DIO_u8GetPinValue+0x13c>
            
        }
            
        else 
        {
            Local_Errorstate = 1;
 722:	81 e0       	ldi	r24, 0x01	; 1
 724:	89 83       	std	Y+1, r24	; 0x01
        }
    
    return Local_Errorstate;
 726:	89 81       	ldd	r24, Y+1	; 0x01
}
 728:	27 96       	adiw	r28, 0x07	; 7
 72a:	0f b6       	in	r0, 0x3f	; 63
 72c:	f8 94       	cli
 72e:	de bf       	out	0x3e, r29	; 62
 730:	0f be       	out	0x3f, r0	; 63
 732:	cd bf       	out	0x3d, r28	; 61
 734:	cf 91       	pop	r28
 736:	df 91       	pop	r29
 738:	08 95       	ret

0000073a <SDD_u8SetNumber>:
#include "SDD_config.h"
#include "SDD_private.h"


u8 SDD_u8SetNumber(u8 Copy_u8Number , SDD_T *SDD)
{
 73a:	df 93       	push	r29
 73c:	cf 93       	push	r28
 73e:	cd b7       	in	r28, 0x3d	; 61
 740:	de b7       	in	r29, 0x3e	; 62
 742:	63 97       	sbiw	r28, 0x13	; 19
 744:	0f b6       	in	r0, 0x3f	; 63
 746:	f8 94       	cli
 748:	de bf       	out	0x3e, r29	; 62
 74a:	0f be       	out	0x3f, r0	; 63
 74c:	cd bf       	out	0x3d, r28	; 61
 74e:	8c 87       	std	Y+12, r24	; 0x0c
 750:	7e 87       	std	Y+14, r23	; 0x0e
 752:	6d 87       	std	Y+13, r22	; 0x0d
    u8 Local_Errorstate = 0;
 754:	19 82       	std	Y+1, r1	; 0x01
							0b01101101 ,
							0b01111101 ,
							0b00000111 ,
							0b01111111 ,
							0b01101111
    						};
 756:	ce 01       	movw	r24, r28
 758:	02 96       	adiw	r24, 0x02	; 2
 75a:	98 8b       	std	Y+16, r25	; 0x10
 75c:	8f 87       	std	Y+15, r24	; 0x0f
 75e:	e0 e6       	ldi	r30, 0x60	; 96
 760:	f0 e0       	ldi	r31, 0x00	; 0
 762:	fa 8b       	std	Y+18, r31	; 0x12
 764:	e9 8b       	std	Y+17, r30	; 0x11
 766:	fa e0       	ldi	r31, 0x0A	; 10
 768:	fb 8b       	std	Y+19, r31	; 0x13
 76a:	e9 89       	ldd	r30, Y+17	; 0x11
 76c:	fa 89       	ldd	r31, Y+18	; 0x12
 76e:	00 80       	ld	r0, Z
 770:	89 89       	ldd	r24, Y+17	; 0x11
 772:	9a 89       	ldd	r25, Y+18	; 0x12
 774:	01 96       	adiw	r24, 0x01	; 1
 776:	9a 8b       	std	Y+18, r25	; 0x12
 778:	89 8b       	std	Y+17, r24	; 0x11
 77a:	ef 85       	ldd	r30, Y+15	; 0x0f
 77c:	f8 89       	ldd	r31, Y+16	; 0x10
 77e:	00 82       	st	Z, r0
 780:	8f 85       	ldd	r24, Y+15	; 0x0f
 782:	98 89       	ldd	r25, Y+16	; 0x10
 784:	01 96       	adiw	r24, 0x01	; 1
 786:	98 8b       	std	Y+16, r25	; 0x10
 788:	8f 87       	std	Y+15, r24	; 0x0f
 78a:	9b 89       	ldd	r25, Y+19	; 0x13
 78c:	91 50       	subi	r25, 0x01	; 1
 78e:	9b 8b       	std	Y+19, r25	; 0x13
 790:	eb 89       	ldd	r30, Y+19	; 0x13
 792:	ee 23       	and	r30, r30
 794:	51 f7       	brne	.-44     	; 0x76a <SDD_u8SetNumber+0x30>

    if(SDD->ComType == SDD_u8COM_ANODE)
 796:	ed 85       	ldd	r30, Y+13	; 0x0d
 798:	fe 85       	ldd	r31, Y+14	; 0x0e
 79a:	83 81       	ldd	r24, Z+3	; 0x03
 79c:	81 30       	cpi	r24, 0x01	; 1
 79e:	e9 f4       	brne	.+58     	; 0x7da <SDD_u8SetNumber+0xa0>
    {
    	DIO_u8SetPinValue(SDD->EnablePort ,SDD->EnablePin , DIO_u8PIN_HIGH);
 7a0:	ed 85       	ldd	r30, Y+13	; 0x0d
 7a2:	fe 85       	ldd	r31, Y+14	; 0x0e
 7a4:	81 81       	ldd	r24, Z+1	; 0x01
 7a6:	ed 85       	ldd	r30, Y+13	; 0x0d
 7a8:	fe 85       	ldd	r31, Y+14	; 0x0e
 7aa:	92 81       	ldd	r25, Z+2	; 0x02
 7ac:	69 2f       	mov	r22, r25
 7ae:	41 e0       	ldi	r20, 0x01	; 1
 7b0:	0e 94 9b 01 	call	0x336	; 0x336 <DIO_u8SetPinValue>
    	DIO_u8SetPortValue(SDD->Port,~Local_NumArr[Copy_u8Number]);
 7b4:	ed 85       	ldd	r30, Y+13	; 0x0d
 7b6:	fe 85       	ldd	r31, Y+14	; 0x0e
 7b8:	40 81       	ld	r20, Z
 7ba:	8c 85       	ldd	r24, Y+12	; 0x0c
 7bc:	28 2f       	mov	r18, r24
 7be:	30 e0       	ldi	r19, 0x00	; 0
 7c0:	ce 01       	movw	r24, r28
 7c2:	02 96       	adiw	r24, 0x02	; 2
 7c4:	fc 01       	movw	r30, r24
 7c6:	e2 0f       	add	r30, r18
 7c8:	f3 1f       	adc	r31, r19
 7ca:	80 81       	ld	r24, Z
 7cc:	98 2f       	mov	r25, r24
 7ce:	90 95       	com	r25
 7d0:	84 2f       	mov	r24, r20
 7d2:	69 2f       	mov	r22, r25
 7d4:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_u8SetPortValue>
 7d8:	22 c0       	rjmp	.+68     	; 0x81e <SDD_u8SetNumber+0xe4>
    }
    else if (SDD->ComType == SDD_u8COM_CATHODE)
 7da:	ed 85       	ldd	r30, Y+13	; 0x0d
 7dc:	fe 85       	ldd	r31, Y+14	; 0x0e
 7de:	83 81       	ldd	r24, Z+3	; 0x03
 7e0:	88 23       	and	r24, r24
 7e2:	d9 f4       	brne	.+54     	; 0x81a <SDD_u8SetNumber+0xe0>
    {
    	DIO_u8SetPinValue(SDD->EnablePort ,SDD->EnablePin , DIO_u8PIN_LOW);
 7e4:	ed 85       	ldd	r30, Y+13	; 0x0d
 7e6:	fe 85       	ldd	r31, Y+14	; 0x0e
 7e8:	81 81       	ldd	r24, Z+1	; 0x01
 7ea:	ed 85       	ldd	r30, Y+13	; 0x0d
 7ec:	fe 85       	ldd	r31, Y+14	; 0x0e
 7ee:	92 81       	ldd	r25, Z+2	; 0x02
 7f0:	69 2f       	mov	r22, r25
 7f2:	40 e0       	ldi	r20, 0x00	; 0
 7f4:	0e 94 9b 01 	call	0x336	; 0x336 <DIO_u8SetPinValue>
		DIO_u8SetPortValue(SDD->Port,Local_NumArr[Copy_u8Number]);
 7f8:	ed 85       	ldd	r30, Y+13	; 0x0d
 7fa:	fe 85       	ldd	r31, Y+14	; 0x0e
 7fc:	40 81       	ld	r20, Z
 7fe:	8c 85       	ldd	r24, Y+12	; 0x0c
 800:	28 2f       	mov	r18, r24
 802:	30 e0       	ldi	r19, 0x00	; 0
 804:	ce 01       	movw	r24, r28
 806:	02 96       	adiw	r24, 0x02	; 2
 808:	fc 01       	movw	r30, r24
 80a:	e2 0f       	add	r30, r18
 80c:	f3 1f       	adc	r31, r19
 80e:	90 81       	ld	r25, Z
 810:	84 2f       	mov	r24, r20
 812:	69 2f       	mov	r22, r25
 814:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_u8SetPortValue>
 818:	02 c0       	rjmp	.+4      	; 0x81e <SDD_u8SetNumber+0xe4>

    }

    else
    {
    	Local_Errorstate = 1;
 81a:	81 e0       	ldi	r24, 0x01	; 1
 81c:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_Errorstate;
 81e:	89 81       	ldd	r24, Y+1	; 0x01

}
 820:	63 96       	adiw	r28, 0x13	; 19
 822:	0f b6       	in	r0, 0x3f	; 63
 824:	f8 94       	cli
 826:	de bf       	out	0x3e, r29	; 62
 828:	0f be       	out	0x3f, r0	; 63
 82a:	cd bf       	out	0x3d, r28	; 61
 82c:	cf 91       	pop	r28
 82e:	df 91       	pop	r29
 830:	08 95       	ret

00000832 <SDD_u8Enable>:
u8 SDD_u8Enable(SDD_T *SDD)
{
 832:	df 93       	push	r29
 834:	cf 93       	push	r28
 836:	00 d0       	rcall	.+0      	; 0x838 <SDD_u8Enable+0x6>
 838:	0f 92       	push	r0
 83a:	cd b7       	in	r28, 0x3d	; 61
 83c:	de b7       	in	r29, 0x3e	; 62
 83e:	9b 83       	std	Y+3, r25	; 0x03
 840:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_Errorstate = 0;
 842:	19 82       	std	Y+1, r1	; 0x01

	if(SDD->ComType == SDD_u8COM_ANODE)
 844:	ea 81       	ldd	r30, Y+2	; 0x02
 846:	fb 81       	ldd	r31, Y+3	; 0x03
 848:	83 81       	ldd	r24, Z+3	; 0x03
 84a:	81 30       	cpi	r24, 0x01	; 1
 84c:	59 f4       	brne	.+22     	; 0x864 <__stack+0x5>
	{
		DIO_u8SetPinValue(SDD->EnablePort ,SDD->EnablePin , DIO_u8PIN_HIGH);
 84e:	ea 81       	ldd	r30, Y+2	; 0x02
 850:	fb 81       	ldd	r31, Y+3	; 0x03
 852:	81 81       	ldd	r24, Z+1	; 0x01
 854:	ea 81       	ldd	r30, Y+2	; 0x02
 856:	fb 81       	ldd	r31, Y+3	; 0x03
 858:	92 81       	ldd	r25, Z+2	; 0x02
 85a:	69 2f       	mov	r22, r25
 85c:	41 e0       	ldi	r20, 0x01	; 1
 85e:	0e 94 9b 01 	call	0x336	; 0x336 <DIO_u8SetPinValue>
 862:	12 c0       	rjmp	.+36     	; 0x888 <__stack+0x29>
	}
	else if (SDD->ComType == SDD_u8COM_CATHODE)
 864:	ea 81       	ldd	r30, Y+2	; 0x02
 866:	fb 81       	ldd	r31, Y+3	; 0x03
 868:	83 81       	ldd	r24, Z+3	; 0x03
 86a:	88 23       	and	r24, r24
 86c:	59 f4       	brne	.+22     	; 0x884 <__stack+0x25>
	{
		DIO_u8SetPinValue(SDD->EnablePort ,SDD->EnablePin , DIO_u8PIN_LOW);
 86e:	ea 81       	ldd	r30, Y+2	; 0x02
 870:	fb 81       	ldd	r31, Y+3	; 0x03
 872:	81 81       	ldd	r24, Z+1	; 0x01
 874:	ea 81       	ldd	r30, Y+2	; 0x02
 876:	fb 81       	ldd	r31, Y+3	; 0x03
 878:	92 81       	ldd	r25, Z+2	; 0x02
 87a:	69 2f       	mov	r22, r25
 87c:	40 e0       	ldi	r20, 0x00	; 0
 87e:	0e 94 9b 01 	call	0x336	; 0x336 <DIO_u8SetPinValue>
 882:	02 c0       	rjmp	.+4      	; 0x888 <__stack+0x29>

	}

	else
	{
		Local_Errorstate = 1;
 884:	81 e0       	ldi	r24, 0x01	; 1
 886:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_Errorstate;
 888:	89 81       	ldd	r24, Y+1	; 0x01
}
 88a:	0f 90       	pop	r0
 88c:	0f 90       	pop	r0
 88e:	0f 90       	pop	r0
 890:	cf 91       	pop	r28
 892:	df 91       	pop	r29
 894:	08 95       	ret

00000896 <SDD_u8Disable>:
u8 SDD_u8Disable(SDD_T *SDD)
{
 896:	df 93       	push	r29
 898:	cf 93       	push	r28
 89a:	00 d0       	rcall	.+0      	; 0x89c <SDD_u8Disable+0x6>
 89c:	0f 92       	push	r0
 89e:	cd b7       	in	r28, 0x3d	; 61
 8a0:	de b7       	in	r29, 0x3e	; 62
 8a2:	9b 83       	std	Y+3, r25	; 0x03
 8a4:	8a 83       	std	Y+2, r24	; 0x02

	u8 Local_Errorstate = 0;
 8a6:	19 82       	std	Y+1, r1	; 0x01

	if(SDD->ComType == SDD_u8COM_ANODE)
 8a8:	ea 81       	ldd	r30, Y+2	; 0x02
 8aa:	fb 81       	ldd	r31, Y+3	; 0x03
 8ac:	83 81       	ldd	r24, Z+3	; 0x03
 8ae:	81 30       	cpi	r24, 0x01	; 1
 8b0:	59 f4       	brne	.+22     	; 0x8c8 <SDD_u8Disable+0x32>
	{
		DIO_u8SetPinValue(SDD->EnablePort ,SDD->EnablePin , DIO_u8PIN_LOW);
 8b2:	ea 81       	ldd	r30, Y+2	; 0x02
 8b4:	fb 81       	ldd	r31, Y+3	; 0x03
 8b6:	81 81       	ldd	r24, Z+1	; 0x01
 8b8:	ea 81       	ldd	r30, Y+2	; 0x02
 8ba:	fb 81       	ldd	r31, Y+3	; 0x03
 8bc:	92 81       	ldd	r25, Z+2	; 0x02
 8be:	69 2f       	mov	r22, r25
 8c0:	40 e0       	ldi	r20, 0x00	; 0
 8c2:	0e 94 9b 01 	call	0x336	; 0x336 <DIO_u8SetPinValue>
 8c6:	12 c0       	rjmp	.+36     	; 0x8ec <SDD_u8Disable+0x56>
	}
	else if (SDD->ComType == SDD_u8COM_CATHODE)
 8c8:	ea 81       	ldd	r30, Y+2	; 0x02
 8ca:	fb 81       	ldd	r31, Y+3	; 0x03
 8cc:	83 81       	ldd	r24, Z+3	; 0x03
 8ce:	88 23       	and	r24, r24
 8d0:	59 f4       	brne	.+22     	; 0x8e8 <SDD_u8Disable+0x52>
	{
		DIO_u8SetPinValue(SDD->EnablePort ,SDD->EnablePin , DIO_u8PIN_HIGH);
 8d2:	ea 81       	ldd	r30, Y+2	; 0x02
 8d4:	fb 81       	ldd	r31, Y+3	; 0x03
 8d6:	81 81       	ldd	r24, Z+1	; 0x01
 8d8:	ea 81       	ldd	r30, Y+2	; 0x02
 8da:	fb 81       	ldd	r31, Y+3	; 0x03
 8dc:	92 81       	ldd	r25, Z+2	; 0x02
 8de:	69 2f       	mov	r22, r25
 8e0:	41 e0       	ldi	r20, 0x01	; 1
 8e2:	0e 94 9b 01 	call	0x336	; 0x336 <DIO_u8SetPinValue>
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <SDD_u8Disable+0x56>

	}

	else
	{
		Local_Errorstate = 1;
 8e8:	81 e0       	ldi	r24, 0x01	; 1
 8ea:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_Errorstate;
 8ec:	89 81       	ldd	r24, Y+1	; 0x01
}
 8ee:	0f 90       	pop	r0
 8f0:	0f 90       	pop	r0
 8f2:	0f 90       	pop	r0
 8f4:	cf 91       	pop	r28
 8f6:	df 91       	pop	r29
 8f8:	08 95       	ret

000008fa <main>:

#include "SDD_interface.h"
#include "DIO_interface.h"

void main(void)
{
 8fa:	df 93       	push	r29
 8fc:	cf 93       	push	r28
 8fe:	00 d0       	rcall	.+0      	; 0x900 <main+0x6>
 900:	cd b7       	in	r28, 0x3d	; 61
 902:	de b7       	in	r29, 0x3e	; 62
	SDD_T* SDD1;
	SDD1->ComType = SDD_u8COM_CATHODE;
 904:	e9 81       	ldd	r30, Y+1	; 0x01
 906:	fa 81       	ldd	r31, Y+2	; 0x02
 908:	13 82       	std	Z+3, r1	; 0x03
	SDD1->Port = DIO_u8PORTA;
 90a:	e9 81       	ldd	r30, Y+1	; 0x01
 90c:	fa 81       	ldd	r31, Y+2	; 0x02
 90e:	10 82       	st	Z, r1
	SDD1->EnablePort = DIO_u8PORTC;
 910:	e9 81       	ldd	r30, Y+1	; 0x01
 912:	fa 81       	ldd	r31, Y+2	; 0x02
 914:	82 e0       	ldi	r24, 0x02	; 2
 916:	81 83       	std	Z+1, r24	; 0x01
	SDD1->EnablePin = DIO_u8PIN0;
 918:	e9 81       	ldd	r30, Y+1	; 0x01
 91a:	fa 81       	ldd	r31, Y+2	; 0x02
 91c:	12 82       	std	Z+2, r1	; 0x02

	/*SET PORTA AS OUTPUT FOR SSD*/
	DIO_u8SetPortDirection(SDD1->Port , DIO_u8PORT_OUTPUT);
 91e:	e9 81       	ldd	r30, Y+1	; 0x01
 920:	fa 81       	ldd	r31, Y+2	; 0x02
 922:	80 81       	ld	r24, Z
 924:	6f ef       	ldi	r22, 0xFF	; 255
 926:	0e 94 53 01 	call	0x2a6	; 0x2a6 <DIO_u8SetPortDirection>

	/*SET ENABLE PIN FOR SSD AS OUTPUT*/
	DIO_u8SetPinDirection(SDD1->EnablePort ,SDD1->EnablePin, DIO_u8PIN_OUTPUT);
 92a:	e9 81       	ldd	r30, Y+1	; 0x01
 92c:	fa 81       	ldd	r31, Y+2	; 0x02
 92e:	81 81       	ldd	r24, Z+1	; 0x01
 930:	e9 81       	ldd	r30, Y+1	; 0x01
 932:	fa 81       	ldd	r31, Y+2	; 0x02
 934:	92 81       	ldd	r25, Z+2	; 0x02
 936:	69 2f       	mov	r22, r25
 938:	41 e0       	ldi	r20, 0x01	; 1
 93a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_u8SetPinDirection>

	SDD_u8SetNumber(SDD_u8NUM9, SDD1);
 93e:	29 81       	ldd	r18, Y+1	; 0x01
 940:	3a 81       	ldd	r19, Y+2	; 0x02
 942:	89 e0       	ldi	r24, 0x09	; 9
 944:	b9 01       	movw	r22, r18
 946:	0e 94 9d 03 	call	0x73a	; 0x73a <SDD_u8SetNumber>
 94a:	ff cf       	rjmp	.-2      	; 0x94a <main+0x50>

0000094c <_exit>:
 94c:	f8 94       	cli

0000094e <__stop_program>:
 94e:	ff cf       	rjmp	.-2      	; 0x94e <__stop_program>
